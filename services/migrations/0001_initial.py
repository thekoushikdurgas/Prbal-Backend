# Generated by Django 4.2.0 on 2024-01-15 12:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid
from users.models import Verification, verification_document_path

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='category_icons/')),
                ('icon_url', models.URLField(blank=True, help_text='External icon URL', max_length=500, null=True)),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Order for displaying categories')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSubCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('icon_url', models.URLField(blank=True, help_text='External icon URL', max_length=500, null=True)),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Order for displaying subcategories within category')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='services.servicecategory')),
            ],
            options={
                'verbose_name_plural': 'Service SubCategories',
                'ordering': ['category__sort_order', 'category__name', 'sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pricing_options', models.JSONField(blank=True, default=dict, null=True)),
                ('currency', models.CharField(choices=[('INR', 'Indian Rupee'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], default='INR', max_length=3)),
                ('min_hours', models.PositiveIntegerField(default=1)),
                ('max_hours', models.PositiveIntegerField(default=8)),
                ('availability', models.JSONField(blank=True, default=dict, null=True)),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('required_tools', models.JSONField(blank=True, default=list, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending Approval'), ('inactive', 'Inactive')], default='pending', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='services.servicecategory')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL)),
                ('subcategories', models.ManyToManyField(blank=True, related_name='services', to='services.servicesubcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(choices=[('INR', 'Indian Rupee'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], default='INR', max_length=3)),
                ('urgency', models.CharField(choices=[('low', 'Low - Within a month'), ('medium', 'Medium - Within a week'), ('high', 'High - Within 48 hours'), ('urgent', 'Urgent - Within 24 hours')], default='medium', max_length=10)),
                ('requested_date_time', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('fulfilled', 'Fulfilled'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='open', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('requirements', models.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_service_requests', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='services.servicecategory')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL)),
                ('fulfilled_by_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='originated_from_request', to='services.service')),
                ('subcategories', models.ManyToManyField(blank=True, related_name='service_requests', to='services.servicesubcategory')),
            ],
            options={
                'verbose_name': 'Service Request',
                'verbose_name_plural': 'Service Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='service_images/')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_images', to='services.service')),
            ],
            options={
                'verbose_name_plural': 'Service Images',
                'ordering': ['order'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='servicesubcategory',
            unique_together={('category', 'name')},
        ),
        migrations.RemoveField(
            model_name='service',
            name='hourly_rate',
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the verification entry', primary_key=True, serialize=False)),
                ('verification_type', models.CharField(choices=[('identity', 'Identity Verification'), ('address', 'Address Verification'), ('professional', 'Professional Certification'), ('educational', 'Educational Verification'), ('background', 'Background Check'), ('business', 'Business Registration'), ('banking', 'Banking Information'), ('other', 'Other Verification')], help_text='Type of verification', max_length=30)),
                ('document_type', models.CharField(choices=[('national_id', 'National ID Card'), ('passport', 'Passport'), ('drivers_license', "Driver's License"), ('voter_id', 'Voter ID Card'), ('aadhaar', 'Aadhaar Card'), ('pan_card', 'PAN Card'), ('utility_bill', 'Utility Bill'), ('bank_statement', 'Bank Statement'), ('rental_agreement', 'Rental Agreement'), ('property_tax', 'Property Tax Receipt'), ('professional_cert', 'Professional Certificate'), ('business_license', 'Business License'), ('employment_contract', 'Employment Contract'), ('tax_document', 'Tax Document'), ('degree', 'Degree Certificate'), ('transcript', 'Academic Transcript'), ('course_completion', 'Course Completion Certificate'), ('other', 'Other Document')], default='other', help_text='Type of document submitted', max_length=30)),
                ('document_url', models.FileField(blank=True, help_text='Uploaded verification document', null=True, upload_to=verification_document_path)),
                ('document_back_url', models.FileField(blank=True, help_text='Back side of document if applicable', null=True, upload_to=verification_document_path)),
                ('document_number', models.CharField(blank=True, help_text='Document number for reference', max_length=50)),
                ('status', models.CharField(choices=[('unverified', 'Unverified'), ('pending', 'Pending Review'), ('in_progress', 'In Progress'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', help_text='Current status of verification', max_length=20)),
                ('verification_notes', models.TextField(blank=True, help_text='Internal notes about the verification process')),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection if applicable', null=True)),
                ('verified_at', models.DateTimeField(blank=True, help_text='When the verification was approved', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the verification expires', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the verification was submitted')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the verification was last updated')),
                ('external_reference_id', models.CharField(blank=True, help_text='Reference ID from external verification service', max_length=100)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata related to verification', null=True)),
                ('user', models.ForeignKey(help_text='User being verified', on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, help_text='Admin who processed this verification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifications_processed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Verification',
                'verbose_name_plural': 'Verifications',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'verification_type', 'document_type')},
            },
        ),
        migrations.AddField(
            model_name='verification',
            name='document_link',
            field=models.URLField(blank=True, help_text='External link to verification document', max_length=255, null=True),
        ),
    ] 